@import '../vars/_colors.scss';
@import '../vars/_fonts.scss';
@import "../effects/card-effects";

.feedback__card {
  width: 370px;
  height: 352px;
  margin-bottom: 30px;
  display: block;
  background: white;
  border-radius: 10px;
  box-shadow: 0 24px 38px rgba(0, 0, 0, 0.07), 0 9px 46px rgba(0, 0, 0, 0.06), 0 11px 15px rgba(0, 0, 0, 0.1);
  transition: transform .3s ease;
}

.feedback__card:nth-last-child(-n+3) {
  margin-bottom: 0;
}

.feedback__card:hover .feedback__name, .feedback__card:hover .feedback__title {
  color: white;
}

.feedback__img {
  width: 370px;
  height: 240px;
  //object-fit: cover;
  z-index: 1;
}
//Чтобы вписать картинку в карточку
// https://www.tune-it.ru/web/leksa/blog/-/blogs/1996258
.wrapper__img {
  //Размеры самой картинки
  width: 370px;
  height: 240px;
  border-radius: 10px 10px 0 0;
  box-shadow: 0 24px 38px rgba(0, 0, 0, 0.07), 0 9px 46px rgba(0, 0, 0, 0.06), 0 11px 15px rgba(0, 0, 0, 0.1);
  position: relative;

  & .card-overlay {
    position: absolute;
    width: 100%;
    height: 240px;
    left: 0;
    top: 0;
    background: rgba(0, 0, 0, 0.2);
  }
}
.picture {
  //Так как при высоте 100% от высоты контейнера изображение вылезает за пределы этого контейнера по ширине,
  // для обрезки лишнего используется свойство overflow -
  overflow: hidden;
  //если мы хотим, чтобы в видимую область попала центральная часть изображения, его надо выровнять
  // по центру контейнера. Проще всего это сделать задав контейнеру display: flex, и далее позиционировать
  // изображение по вертикали и горизонтали
  display: flex;
  justify-content: center;
  align-items: center;
}
.picture img {
  //Чтобы избавиться от полей можно заменить свойства width и height на min-width и min-height
  // (при этом ширина и высота по умолчанию примут значения auto). Тогда вне зависимости от
  // ориентации изображения, оно заполнит область целиком.
  min-width: 100%;
  min-height: 100%;
  //если вы используете выравнивание с помощью flex-контейнера, добавьте flex-shrink: 0,
  // чтобы запретить автоматическое масштабирование изображения.
  //flex-shrink: 0;
}

.feedback__text {
  padding: 16px 32px 16px 32px;
  text-decoration: none;
}

.feedback__text p {
  margin: 0;
}

.feedback__name {
  font-family: $font-Oswald;
  font-style: normal;
  font-weight: 700;
  font-size: 24px;
  color: $black;
}

.feedback__title {
  font-family: $font-Montserrat;
  font-style: normal;
  font-weight: 400;
  font-size: 16px;
  line-height: 22px;
  color: $grey-mid;
}












